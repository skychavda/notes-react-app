{"version":3,"sources":["material-element-style/style.js","components/note-list-drawer/noteListDrawer.jsx","components/popup/warningDialog.jsx","components/left-side-bar/displayNote.jsx","components/page-not-found/pageNotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["options","NoteListDrawer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","event","id","setState","anchorEl","currentTarget","deleteNoteIndex","handleClose","handleDelete","_this$state","state","noteList","_this$props","onHandleUpdateList","onHandleDeletedNote","noteIndex","findIndex","note","splice","selectedListIndex","localStorage","setItem","JSON","stringify","handleDrawerClose","onHadnleDrwaer","openAddNote","onHandleAddNote","noteListArray","filterNoteList","latestNoteAdded","addNoteListToArray","bind","assertThisInitialized","handleSearchUser","prevProps","_this$props2","_this$props3","e","filterNoteLists","filter","notetitle","toLowerCase","includes","target","value","noteId","index","onHandleOpenNote","_this2","_this$props4","open","classes","theme","_this$state2","openThreeDotMenu","Boolean","react_default","a","createElement","index_es","className","drawer","variant","anchor","paper","drawerPaper","drawerHeader","onClick","direction","ChevronLeft_default","ChevronRight_default","InputLabelProps","root","cssLabel","focused","cssFocused","InputProps","cssOutlinedInput","notchedOutline","label","type","onChange","style","maxHeight","position","overflow","map","display","title","key","button","displayNote","selected","fontWeight","notediscription","aria-label","aria-owns","undefined","aria-haspopup","zIndex","MoreVert_default","onClose","PaperProps","ITEM_HEIGHT","width","React","Component","defaultProps","WarningDialog","handleClickOpen","onCloseDialog","aria-labelledby","aria-describedby","role","color","NOTE_ID","DisplayNote","handleDrawerOpen","handleAddNote","isAddNote","isNoteSaved","noteTitle","noteDiscription","welcomeLines","saveNote","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","updateNote","addNewNote","stop","showNote","history","location","queryString","parse","search","parseInt","query","searchString","push","openDialog","object","noteListLength","length","cookies","set","path","domain","noteTitleError","noteDiscriptionError","handleNoteDetailChange","getSideBarConditionFromLocalStorage","getNoteListArrayFromLocalStorage","deletedNoteIsOpen","getItem","cachedNoteListArray","defineProperty","name","warningDialog","classNames","appBar","appBarShift","disableGutters","menuButton","hide","Menu_default","noWrap","noteListDrawer","content","contentShift","Fragment","autoFocus","error","textField","margin","placeholder","fullWidth","shrink","required","onKeyUp","multiline","rows","align","withCookies","withStyles","transition","transitions","create","easing","sharp","duration","leavingScreen","&$cssFocused","purple","&$cssFocused $notchedOutline","borderColor","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","PageNotFound","react_router_dom","to","App","isSideBarOpen","handleSideBarReaction","react_router","component","exact","PageNoteFound","window","hostname","match","ReactDOM","render","es6","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59561391.chunk.js","sourcesContent":["import { purple } from '@material-ui/core/colors';\n\nconst drawerWidth = 300;\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  cssLabel: {\n    '&$cssFocused': {\n      color: purple[500],\n    },\n  },\n  cssFocused: {},\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: purple[500],\n    },\n  },\n  notchedOutline: {},\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\nexport const options = [\n  'Delete',\n];\n\nexport const ITEM_HEIGHT = 30;\n","import React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport {\n  Drawer, List, Divider, IconButton, ListItem, TextField, Button, Typography, Menu, MenuItem,\n} from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { options, ITEM_HEIGHT } from '../../material-element-style/style';\n\nclass NoteListDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteList: props.noteListArray,\n      filterNoteList: props.noteListArray,\n      anchorEl: null,\n      deleteNoteIndex: '',\n      selectedListIndex: props.latestNoteAdded,\n    };\n    this.addNoteListToArray = this.addNoteListToArray.bind(this);\n    this.handleSearchUser = this.handleSearchUser.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { noteListArray, latestNoteAdded } = this.props;\n    if (prevProps.noteListArray !== noteListArray || prevProps.latestNoteAdded !== latestNoteAdded) {\n      this.addNoteListToArray();\n    }\n  }\n\n  handleClick = (event, id) => { // three dot menu open\n    this.setState({ anchorEl: event.currentTarget, deleteNoteIndex: id });\n  };\n\n  handleClose = () => { // three dot menu close\n    this.setState({ anchorEl: null });\n  };\n\n  handleDelete = () => { // delete note\n    const { noteList, deleteNoteIndex } = this.state;\n    const { onHandleUpdateList, onHandleDeletedNote } = this.props;\n    const noteIndex = noteList.findIndex(note => note.id === deleteNoteIndex);\n    if (noteIndex > -1) {\n      noteList.splice(noteIndex, 1);\n      this.setState({ anchorEl: null, noteList, selectedListIndex: '' }, () => {\n        localStorage.setItem('noteListArray', JSON.stringify(noteList));\n        onHandleUpdateList();\n        onHandleDeletedNote(deleteNoteIndex);\n      });\n    }\n  }\n\n  handleDrawerClose = () => {\n    const { onHadnleDrwaer } = this.props;\n    onHadnleDrwaer();\n  }\n\n  openAddNote = () => { // make new note and allow to add note\n    const { onHandleAddNote } = this.props;\n    this.setState({ selectedListIndex: '' }, () => {\n      onHandleAddNote();\n    });\n  }\n\n  addNoteListToArray() { // add localstorage note list to state\n    const { noteListArray, latestNoteAdded } = this.props;\n    this.setState({\n      noteList: noteListArray,\n      filterNoteList: noteListArray,\n      selectedListIndex: latestNoteAdded,\n    });\n  }\n\n  handleSearchUser(e) { // search note within list\n    const { filterNoteList } = this.state;\n    const filterNoteLists = filterNoteList.filter(note => note.notetitle.toLowerCase().includes(e.target.value));\n    this.setState({\n      noteList: filterNoteLists,\n    });\n  }\n\n  displayNote(noteId, index) { // display note when user click on note\n    const { onHandleOpenNote } = this.props;\n    this.setState({\n      selectedListIndex: index,\n    });\n    onHandleOpenNote(noteId);\n  }\n\n  render() {\n    const {\n      open, classes, theme,\n    } = this.props;\n    const { noteList, anchorEl, selectedListIndex } = this.state;\n    const openThreeDotMenu = Boolean(anchorEl);\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <TextField\n          className=\"search-text-field\"\n          InputLabelProps={{\n            classes: {\n              root: classes.cssLabel,\n              focused: classes.cssFocused,\n            },\n          }}\n          InputProps={{\n            classes: {\n              root: classes.cssOutlinedInput,\n              focused: classes.cssFocused,\n              notchedOutline: classes.notchedOutline,\n            },\n          }}\n          label=\"Search\"\n          variant=\"outlined\"\n          id=\"custom-css-outlined-input\"\n          type=\"search\"\n          onChange={e => this.handleSearchUser(e)}\n        />\n        <Button variant=\"outlined\" className=\"add-note-btn\" onClick={this.openAddNote}>Add</Button>\n        <List style={{\n          maxHeight: '800px',\n          position: 'relative',\n          overflow: 'auto',\n        }}\n        >\n          {noteList.map((note, index) => (\n            <div style={{ display: 'flex' }} className={classes.title} key={note.id}>\n              <ListItem button key={note.id} onClick={() => this.displayNote(note.id, index)} className={classes.title} selected={selectedListIndex === index}>\n                <Typography>\n                  <span style={{ fontWeight: '600' }}>{note.notetitle}</span>\n                  <br />\n                  {note.notediscription}\n                </Typography>\n              </ListItem>\n              <div>\n                <IconButton\n                  aria-label=\"More\"\n                  aria-owns={openThreeDotMenu ? 'long-menu' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={e => this.handleClick(e, note.id)}\n                  style={{ zIndex: '9999' }}\n                >\n                  <MoreVertIcon style={{ zIndex: '10' }} />\n                </IconButton>\n                <Menu\n                  id=\"long-menu\"\n                  anchorEl={anchorEl}\n                  open={openThreeDotMenu}\n                  onClose={this.handleClose}\n                  PaperProps={{\n                    style: {\n                      maxHeight: ITEM_HEIGHT * 4.5,\n                      width: 200,\n                    },\n                  }}\n                >\n                  <MenuItem key={options} onClick={this.handleDelete}>\n                    {options}\n                  </MenuItem>\n                </Menu>\n              </div>\n            </div>\n          ))}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nNoteListDrawer.propTypes = {\n  onHandleOpenNote: PropTypes.func,\n  onHadnleDrwaer: PropTypes.func,\n  onHandleAddNote: PropTypes.func,\n  onHandleUpdateList: PropTypes.func,\n  open: PropTypes.bool,\n  classes: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object, PropTypes.array]),\n  theme: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object, PropTypes.array]),\n  onHandleDeletedNote: PropTypes.func,\n  noteListArray: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object, PropTypes.array]),\n  latestNoteAdded: number,\n};\n\nNoteListDrawer.defaultProps = {\n  onHandleOpenNote: () => null,\n  onHadnleDrwaer: () => null,\n  onHandleAddNote: () => null,\n  onHandleUpdateList: () => null,\n  open: true,\n  classes: [],\n  theme: [],\n  onHandleDeletedNote: () => null,\n  noteListArray: [],\n  latestNoteAdded: 0,\n};\n\nexport default NoteListDrawer;\n","import React from 'react';\r\nimport {\r\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button,\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass WarningDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: true,\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    const { onCloseDialog } = this.props;\r\n    this.setState({ open: false });\r\n    onCloseDialog();\r\n  };\r\n\r\n  render() {\r\n    const { open } = this.state;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {'Caution'}\r\n          {' '}\r\n          <span role=\"img\" aria-label=\"caution\">🚫</span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {'No note found with provided id'}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            {'Close'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nWarningDialog.propTypes = {\r\n  onCloseDialog: PropTypes.func,\r\n};\r\n\r\nWarningDialog.defaultProps = {\r\n  onCloseDialog: () => null,\r\n};\r\n\r\nexport default WarningDialog;\r\n","import React from 'react';\nimport { PropTypes, instanceOf } from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  CssBaseline, AppBar, Toolbar, Typography, IconButton, TextField, Divider, Button,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport queryString from 'query-string';\nimport { withCookies, Cookies } from 'react-cookie';\nimport NodeListDrawer from '../note-list-drawer/noteListDrawer';\nimport { styles } from '../../material-element-style/style';\nimport WarningDialog from '../popup/warningDialog';\n\nlet NOTE_ID = 0;\n\nclass DisplayNote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      isAddNote: false,\n      isNoteSaved: false,\n      noteList: [],\n      noteTitle: '',\n      noteDiscription: '',\n      latestNoteAdded: 0,\n      welcomeLines: true,\n      noteListLength: 0,\n      noteTitleError: false,\n      noteDiscriptionError: false,\n      openDialog: false,\n    };\n    this.handleNoteDetailChange = this.handleNoteDetailChange.bind(this);\n    this.getSideBarConditionFromLocalStorage = this.getSideBarConditionFromLocalStorage.bind(this);\n    this.getNoteListArrayFromLocalStorage = this.getNoteListArrayFromLocalStorage.bind(this);\n    this.addNewNote = this.addNewNote.bind(this);\n    this.deletedNoteIsOpen = this.deletedNoteIsOpen.bind(this);\n    this.onCloseDialog = this.onCloseDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSideBarConditionFromLocalStorage(); // get drawer condition from localstorage\n    this.getNoteListArrayFromLocalStorage(); // get note list from local storage\n  }\n\n  getSideBarConditionFromLocalStorage() {\n    const cachedSideBar = localStorage.getItem('isSideBarOpen');\n    if (cachedSideBar === 'true') {\n      this.setState({\n        open: true,\n      });\n    }\n    else {\n      this.setState({\n        open: false,\n      });\n    }\n  }\n\n  async getNoteListArrayFromLocalStorage() {\n    const cachedNoteListArray = await localStorage.getItem('noteListArray');\n    if (cachedNoteListArray) {\n      const id = JSON.parse(cachedNoteListArray).map(note => note.id);\n      if (id[id.length - 1] === undefined) {\n        NOTE_ID = 0; // if list is empty\n      }\n      else {\n        NOTE_ID = id[id.length - 1] + 1; // get the last id of array and increment by 1\n      }\n      this.setState({\n        noteList: JSON.parse(cachedNoteListArray),\n      });\n    }\n    this.showNote();\n  }\n\n  onCloseDialog() {\n    const { history } = this.props;\n    const query = { id: 0 };\n    const searchString = queryString.stringify(query);\n    history.push({\n      search: searchString,\n    });\n    this.showNote(0);\n  }\n\n  handleDrawerOpen = () => {\n    // const { open } = this.state;\n    this.setState({ open: true }, () => {\n      localStorage.setItem('isSideBarOpen', this.state.open);\n    });\n  };\n\n  handleDrawerClose = () => {\n    // const { open } = this.state;\n    this.setState({ open: false }, () => {\n      localStorage.setItem('isSideBarOpen', this.state.open);\n    });\n  };\n\n  handleAddNote = () => {\n    this.setState({\n      isAddNote: true, isNoteSaved: false, noteTitle: '', noteDiscription: '', latestNoteAdded: '', welcomeLines: false,\n    });\n  }\n\n  saveNote = async () => {\n    const {\n      noteList, noteTitle, noteDiscription, latestNoteAdded,\n    } = this.state;\n    const index = await noteList.findIndex(note => note.id === latestNoteAdded); // check weather note is exist or not\n    if (index > -1) {\n      this.updateNote(index, noteList, noteTitle, noteDiscription); // update existing note\n    }\n    else {\n      this.addNewNote(noteList, noteDiscription, noteTitle); // add new note\n    }\n  }\n\n  showNote = (noteId) => { // display note\n    const { noteList } = this.state;\n    const { history, location } = this.props;\n    let value = queryString.parse(location.search);\n    let index;\n    /* if note id is passed by querystring id */\n    if (noteId === undefined && value.id !== undefined) {\n      value = queryString.parse(location.search);\n      const id = parseInt(value.id, 10);\n      index = noteList.findIndex(note => note.id === id);\n    }\n    else if (noteId !== undefined) {\n      index = noteList.findIndex(note => note.id === noteId);\n      const query = { id: noteId };\n      const searchString = queryString.stringify(query);\n      history.push({\n        search: searchString,\n      });\n    }\n    if (index > -1) {\n      this.setState({\n        noteTitle: noteList[index].notetitle, isNoteSaved: true, noteDiscription: noteList[index].notediscription, isAddNote: true, latestNoteAdded: noteList[index].id, welcomeLines: false,\n      });\n    }\n    else if (index === -1) {\n      this.setState({\n        openDialog: true,\n      });\n    }\n  }\n\n  updateNote = (index, noteList, noteTitle, noteDiscription) => {\n    noteList[index].notetitle = noteTitle;\n    noteList[index].notediscription = noteDiscription;\n    localStorage.setItem('noteListArray', JSON.stringify(noteList));\n    this.setState({\n      noteList,\n    });\n  }\n\n  addNewNote = (noteList, noteDiscription, noteTitle) => {\n    if (noteTitle === '' || noteDiscription === '') {\n      this.setState({\n\n      });\n    }\n    else {\n      const noteId = NOTE_ID;\n      const object = { id: NOTE_ID, notetitle: noteTitle, notediscription: noteDiscription };\n      NOTE_ID += 1;\n      noteList.push(object);\n      this.setState({\n        isNoteSaved: true, isAddNote: false, noteList, latestNoteAdded: noteId, noteListLength: noteList.length,\n      }, () => {\n        localStorage.setItem('noteListArray', JSON.stringify(noteList)); // store notelist array to local storage\n      });\n      const { cookies } = this.props;\n      cookies.set('note', noteId, { path: '/', domain: '.letsnotes.ga' });\n      this.showNote(noteId);\n    }\n  }\n\n  deletedNoteIsOpen(noteId) { // if open note is delete then this method is called\n    const { latestNoteAdded } = this.state;\n    if (noteId === latestNoteAdded) {\n      this.setState({\n        noteTitle: '', isNoteSaved: false, noteDiscription: '', isAddNote: false, latestNoteAdded: noteId, welcomeLines: true,\n      });\n    }\n  }\n\n  handleNoteDetailChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes, theme } = this.props;\n    const {\n      open, isAddNote, isNoteSaved, noteTitle, noteDiscription, welcomeLines, noteListLength, latestNoteAdded, noteList, noteTitleError, noteDiscriptionError, openDialog,\n    } = this.state;\n    return (\n      <div className={classes.root}>\n        {openDialog && <WarningDialog onCloseDialog={this.onCloseDialog} />}\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Notes\n            </Typography>\n            {isAddNote && <Button color=\"inherit\" onClick={this.saveNote}>Save</Button>}\n          </Toolbar>\n        </AppBar>\n        <NodeListDrawer classes={classes} theme={theme} open={open} noteListArray={noteList} latestNoteAdded={latestNoteAdded} onHandleDeletedNote={this.deletedNoteIsOpen} onHadnleDrwaer={this.handleDrawerClose} onHandleAddNote={this.handleAddNote} noteListLength={noteListLength} onHandleOpenNote={this.showNote} onHandleUpdateList={this.getNoteListArrayFromLocalStorage} />\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          {(isAddNote || isNoteSaved) && (\n            <React.Fragment>\n              <TextField\n                name=\"noteTitle\"\n                autoFocus\n                error={noteTitleError === true}\n                id=\"outlined-bare\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                style={{ margin: 8 }}\n                value={isNoteSaved === true ? noteTitle : noteTitle}\n                placeholder=\"Enter Note Name\"\n                fullWidth\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={this.handleNoteDetailChange}\n                required\n                onKeyUp={this.saveNote}\n              />\n              <Divider variant=\"middle\" />\n              <TextField\n                name=\"noteDiscription\"\n                id=\"outlined-bare\"\n                error={noteDiscriptionError === true}\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                style={{ margin: 8 }}\n                value={isNoteSaved === true ? noteDiscription : noteDiscription}\n                placeholder=\"Enter your discription\"\n                fullWidth\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                multiline\n                onChange={this.handleNoteDetailChange}\n                rows=\"10\"\n                onKeyUp={this.saveNote}\n              />\n            </React.Fragment>\n          )}\n          {welcomeLines && (\n            <Typography align=\"center\" noWrap variant=\"display2\">\n              Welcome to notes\n            </Typography>\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nDisplayNote.propTypes = {\n  classes: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object, PropTypes.array]).isRequired,\n  theme: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object, PropTypes.array]).isRequired,\n  history: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object, PropTypes.array]),\n  location: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object, PropTypes.array]),\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nDisplayNote.defaultProps = {\n  history: [],\n  location: [],\n};\n\nexport default withCookies(withStyles(styles, { withTheme: true })(DisplayNote));\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PageNotFound = () => (\r\n  <div className=\"page-not-found\">\r\n    <h4 className=\"not-found-text\">404 page not found.</h4>\r\n    <div className=\"back-to-main\"><Link to=\"/\" className=\"link\">Back to main</Link></div>\r\n  </div>\r\n);\r\n\r\nexport default PageNotFound;\r\n","import React, { Component } from 'react';\n// import './App.css';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport DisplayNote from './components/left-side-bar/displayNote';\nimport PageNoteFound from './components/page-not-found/pageNotFound';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSideBarOpen: false,\n    };\n    this.handleSideBarReaction = this.handleSideBarReaction.bind(this);\n  }\n\n  handleSideBarReaction() {\n    const { isSideBarOpen } = this.state;\n    this.setState({\n      isSideBarOpen: !isSideBarOpen,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Router>\n          <Switch>\n            <Route path=\"/\" component={DisplayNote} exact />\n            <Route component={PageNoteFound} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object, PropTypes.array]).isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      }\n      else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            }\n            else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      }\n      else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/main.css';\nimport { CookiesProvider } from 'react-cookie';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}